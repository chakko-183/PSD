Traceback (most recent call last):
  File "/usr/local/lib/python3.12/dist-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.12/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.12/dist-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/dist-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/dist-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.12/dist-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.12/dist-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
from sqlalchemy import create_engine

USER = "root"
PASSWORD = ""
HOST = "localhost"
PORT = 3306
DBNAME = "irisNew"

# Buat koneksi ke MySQL (pakai driver PyMySQL)
engine = create_engine(f"mysql+pymysql://{USER}:{PASSWORD}@{HOST}:{PORT}/{DBNAME}")

# Query ke database MySQL
query = "SELECT * FROM iris_full;"
df = pd.read_sql(query, engine)

dataset=df

# cursor = engine.cursor()
# cursor.execute("SHOW COLUMNS FROM iris_full")
# columns = cursor.fetchall()

# Ambil seluruh isi tabel
df = pd.read_sql("SELECT * FROM iris_full", engine)
print("\nIsi tabel iris_full:")
print(df)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mOSError[0m                                   Traceback (most recent call last)
[0;32m/usr/local/lib/python3.12/dist-packages/pymysql/connections.py[0m in [0;36mconnect[0;34m(self, sock)[0m
[1;32m    660[0m                         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 661[0;31m                             sock = socket.create_connection(
[0m[1;32m    662[0m                                 [0;34m([0m[0mself[0m[0;34m.[0m[0mhost[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mport[0m[0;34m)[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mconnect_timeout[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.12/socket.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, all_errors)[0m
[1;32m    864[0m             [0;32mif[0m [0;32mnot[0m [0mall_errors[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 865[0;31m                 [0;32mraise[0m [0mexceptions[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    866[0m             [0;32mraise[0m [0mExceptionGroup[0m[0;34m([0m[0;34m"create_connection failed"[0m[0;34m,[0m [0mexceptions[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.12/socket.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, all_errors)[0m
[1;32m    849[0m                 [0msock[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0msource_address[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 850[0;31m             [0msock[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0msa[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    851[0m             [0;31m# Break explicitly a reference cycle[0m[0;34m[0m[0;34m[0m[0m

[0;31mOSError[0m: [Errno 99] Cannot assign requested address

During handling of the above exception, another exception occurred:

[0;31mOperationalError[0m                          Traceback (most recent call last)
[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/base.py[0m in [0;36m__init__[0;34m(self, engine, connection, _has_events, _allow_revalidate, _allow_autobegin)[0m
[1;32m    142[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 143[0;31m                 [0mself[0m[0;34m.[0m[0m_dbapi_connection[0m [0;34m=[0m [0mengine[0m[0;34m.[0m[0mraw_connection[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    144[0m             [0;32mexcept[0m [0mdialect[0m[0;34m.[0m[0mloaded_dbapi[0m[0;34m.[0m[0mError[0m [0;32mas[0m [0merr[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/base.py[0m in [0;36mraw_connection[0;34m(self)[0m
[1;32m   3300[0m         """
[0;32m-> 3301[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mpool[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3302[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    446[0m         """
[0;32m--> 447[0;31m         [0;32mreturn[0m [0m_ConnectionFairy[0m[0;34m.[0m[0m_checkout[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    448[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m_checkout[0;34m(cls, pool, threadconns, fairy)[0m
[1;32m   1263[0m         [0;32mif[0m [0;32mnot[0m [0mfairy[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1264[0;31m             [0mfairy[0m [0;34m=[0m [0m_ConnectionRecord[0m[0;34m.[0m[0mcheckout[0m[0;34m([0m[0mpool[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1265[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36mcheckout[0;34m(cls, pool)[0m
[1;32m    710[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 711[0;31m             [0mrec[0m [0;34m=[0m [0mpool[0m[0;34m.[0m[0m_do_get[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    712[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/impl.py[0m in [0;36m_do_get[0;34m(self)[0m
[1;32m    176[0m             [0;32mexcept[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 177[0;31m                 [0;32mwith[0m [0mutil[0m[0;34m.[0m[0msafe_reraise[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    178[0m                     [0mself[0m[0;34m.[0m[0m_dec_overflow[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/util/langhelpers.py[0m in [0;36m__exit__[0;34m(self, type_, value, traceback)[0m
[1;32m    223[0m             [0mself[0m[0;34m.[0m[0m_exc_info[0m [0;34m=[0m [0;32mNone[0m  [0;31m# remove potential circular references[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 224[0;31m             [0;32mraise[0m [0mexc_value[0m[0;34m.[0m[0mwith_traceback[0m[0;34m([0m[0mexc_tb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    225[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/impl.py[0m in [0;36m_do_get[0;34m(self)[0m
[1;32m    174[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 175[0;31m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_create_connection[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    176[0m             [0;32mexcept[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m_create_connection[0;34m(self)[0m
[1;32m    387[0m [0;34m[0m[0m
[0;32m--> 388[0;31m         [0;32mreturn[0m [0m_ConnectionRecord[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    389[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m__init__[0;34m(self, pool, connect)[0m
[1;32m    672[0m         [0;32mif[0m [0mconnect[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 673[0;31m             [0mself[0m[0;34m.[0m[0m__connect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    674[0m         [0mself[0m[0;34m.[0m[0mfinalize_callback[0m [0;34m=[0m [0mdeque[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m__connect[0;34m(self)[0m
[1;32m    898[0m         [0;32mexcept[0m [0mBaseException[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 899[0;31m             [0;32mwith[0m [0mutil[0m[0;34m.[0m[0msafe_reraise[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    900[0m                 [0mpool[0m[0;34m.[0m[0mlogger[0m[0;34m.[0m[0mdebug[0m[0;34m([0m[0;34m"Error on connect(): %s"[0m[0;34m,[0m [0me[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/util/langhelpers.py[0m in [0;36m__exit__[0;34m(self, type_, value, traceback)[0m
[1;32m    223[0m             [0mself[0m[0;34m.[0m[0m_exc_info[0m [0;34m=[0m [0;32mNone[0m  [0;31m# remove potential circular references[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 224[0;31m             [0;32mraise[0m [0mexc_value[0m[0;34m.[0m[0mwith_traceback[0m[0;34m([0m[0mexc_tb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    225[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m__connect[0;34m(self)[0m
[1;32m    894[0m             [0mself[0m[0;34m.[0m[0mstarttime[0m [0;34m=[0m [0mtime[0m[0;34m.[0m[0mtime[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 895[0;31m             [0mself[0m[0;34m.[0m[0mdbapi_connection[0m [0;34m=[0m [0mconnection[0m [0;34m=[0m [0mpool[0m[0;34m.[0m[0m_invoke_creator[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    896[0m             [0mpool[0m[0;34m.[0m[0mlogger[0m[0;34m.[0m[0mdebug[0m[0;34m([0m[0;34m"Created new connection %r"[0m[0;34m,[0m [0mconnection[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/create.py[0m in [0;36mconnect[0;34m(connection_record)[0m
[1;32m    660[0m [0;34m[0m[0m
[0;32m--> 661[0;31m             [0;32mreturn[0m [0mdialect[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m*[0m[0mcargs[0m[0;34m,[0m [0;34m**[0m[0mcparams[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    662[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/default.py[0m in [0;36mconnect[0;34m(self, *cargs, **cparams)[0m
[1;32m    628[0m         [0;31m# inherits the docstring from interfaces.Dialect.connect[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 629[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mloaded_dbapi[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m*[0m[0mcargs[0m[0;34m,[0m [0;34m**[0m[0mcparams[0m[0;34m)[0m  [0;31m# type: ignore[no-any-return]  # NOQA: E501[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    630[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/pymysql/connections.py[0m in [0;36m__init__[0;34m(self, user, password, host, database, unix_socket, port, charset, collation, sql_mode, read_default_file, conv, use_unicode, client_flag, cursorclass, init_command, connect_timeout, read_default_group, autocommit, local_infile, max_allowed_packet, defer_connect, auth_plugin_map, read_timeout, write_timeout, bind_address, binary_prefix, program_name, server_public_key, ssl, ssl_ca, ssl_cert, ssl_disabled, ssl_key, ssl_key_password, ssl_verify_cert, ssl_verify_identity, compress, named_pipe, passwd, db)[0m
[1;32m    364[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 365[0;31m             [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    366[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/pymysql/connections.py[0m in [0;36mconnect[0;34m(self, sock)[0m
[1;32m    722[0m                     [0mprint[0m[0;34m([0m[0mexc[0m[0;34m.[0m[0mtraceback[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 723[0;31m                 [0;32mraise[0m [0mexc[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    724[0m [0;34m[0m[0m

[0;31mOperationalError[0m: (2003, "Can't connect to MySQL server on 'localhost' ([Errno 99] Cannot assign requested address)")

The above exception was the direct cause of the following exception:

[0;31mOperationalError[0m                          Traceback (most recent call last)
[0;32m/tmp/ipython-input-2331604547.py[0m in [0;36m<cell line: 0>[0;34m()[0m
[1;32m     13[0m [0;31m# Query ke database MySQL[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m [0mquery[0m [0;34m=[0m [0;34m"SELECT * FROM iris_full;"[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m [0mdf[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mread_sql[0m[0;34m([0m[0mquery[0m[0;34m,[0m [0mengine[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m [0;34m[0m[0m
[1;32m     17[0m [0mdataset[0m[0;34m=[0m[0mdf[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/pandas/io/sql.py[0m in [0;36mread_sql[0;34m(sql, con, index_col, coerce_float, params, parse_dates, columns, chunksize, dtype_backend, dtype)[0m
[1;32m    702[0m     [0;32massert[0m [0mdtype_backend[0m [0;32mis[0m [0;32mnot[0m [0mlib[0m[0;34m.[0m[0mno_default[0m[0;34m[0m[0;34m[0m[0m
[1;32m    703[0m [0;34m[0m[0m
[0;32m--> 704[0;31m     [0;32mwith[0m [0mpandasSQL_builder[0m[0;34m([0m[0mcon[0m[0;34m)[0m [0;32mas[0m [0mpandas_sql[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    705[0m         [0;32mif[0m [0misinstance[0m[0;34m([0m[0mpandas_sql[0m[0;34m,[0m [0mSQLiteDatabase[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    706[0m             return pandas_sql.read_query(

[0;32m/usr/local/lib/python3.12/dist-packages/pandas/io/sql.py[0m in [0;36mpandasSQL_builder[0;34m(con, schema, need_transaction)[0m
[1;32m    904[0m [0;34m[0m[0m
[1;32m    905[0m     [0;32mif[0m [0msqlalchemy[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m [0;32mand[0m [0misinstance[0m[0;34m([0m[0mcon[0m[0;34m,[0m [0;34m([0m[0mstr[0m[0;34m,[0m [0msqlalchemy[0m[0;34m.[0m[0mengine[0m[0;34m.[0m[0mConnectable[0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 906[0;31m         [0;32mreturn[0m [0mSQLDatabase[0m[0;34m([0m[0mcon[0m[0;34m,[0m [0mschema[0m[0;34m,[0m [0mneed_transaction[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    907[0m [0;34m[0m[0m
[1;32m    908[0m     [0madbc[0m [0;34m=[0m [0mimport_optional_dependency[0m[0;34m([0m[0;34m"adbc_driver_manager.dbapi"[0m[0;34m,[0m [0merrors[0m[0;34m=[0m[0;34m"ignore"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/pandas/io/sql.py[0m in [0;36m__init__[0;34m(self, con, schema, need_transaction)[0m
[1;32m   1634[0m             [0mself[0m[0;34m.[0m[0mexit_stack[0m[0;34m.[0m[0mcallback[0m[0;34m([0m[0mcon[0m[0;34m.[0m[0mdispose[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1635[0m         [0;32mif[0m [0misinstance[0m[0;34m([0m[0mcon[0m[0;34m,[0m [0mEngine[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1636[0;31m             [0mcon[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mexit_stack[0m[0;34m.[0m[0menter_context[0m[0;34m([0m[0mcon[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1637[0m         [0;32mif[0m [0mneed_transaction[0m [0;32mand[0m [0;32mnot[0m [0mcon[0m[0;34m.[0m[0min_transaction[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1638[0m             [0mself[0m[0;34m.[0m[0mexit_stack[0m[0;34m.[0m[0menter_context[0m[0;34m([0m[0mcon[0m[0;34m.[0m[0mbegin[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/base.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m   3275[0m         """
[1;32m   3276[0m [0;34m[0m[0m
[0;32m-> 3277[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_connection_cls[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3278[0m [0;34m[0m[0m
[1;32m   3279[0m     [0;32mdef[0m [0mraw_connection[0m[0;34m([0m[0mself[0m[0;34m)[0m [0;34m->[0m [0mPoolProxiedConnection[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/base.py[0m in [0;36m__init__[0;34m(self, engine, connection, _has_events, _allow_revalidate, _allow_autobegin)[0m
[1;32m    143[0m                 [0mself[0m[0;34m.[0m[0m_dbapi_connection[0m [0;34m=[0m [0mengine[0m[0;34m.[0m[0mraw_connection[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    144[0m             [0;32mexcept[0m [0mdialect[0m[0;34m.[0m[0mloaded_dbapi[0m[0;34m.[0m[0mError[0m [0;32mas[0m [0merr[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 145[0;31m                 Connection._handle_dbapi_exception_noconnection(
[0m[1;32m    146[0m                     [0merr[0m[0;34m,[0m [0mdialect[0m[0;34m,[0m [0mengine[0m[0;34m[0m[0;34m[0m[0m
[1;32m    147[0m                 )

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/base.py[0m in [0;36m_handle_dbapi_exception_noconnection[0;34m(cls, e, dialect, engine, is_disconnect, invalidate_pool_on_disconnect, is_pre_ping)[0m
[1;32m   2438[0m         [0;32melif[0m [0mshould_wrap[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2439[0m             [0;32massert[0m [0msqlalchemy_exception[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2440[0;31m             [0;32mraise[0m [0msqlalchemy_exception[0m[0;34m.[0m[0mwith_traceback[0m[0;34m([0m[0mexc_info[0m[0;34m[[0m[0;36m2[0m[0;34m][0m[0;34m)[0m [0;32mfrom[0m [0me[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2441[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2442[0m             [0;32massert[0m [0mexc_info[0m[0;34m[[0m[0;36m1[0m[0;34m][0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/base.py[0m in [0;36m__init__[0;34m(self, engine, connection, _has_events, _allow_revalidate, _allow_autobegin)[0m
[1;32m    141[0m         [0;32mif[0m [0mconnection[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    142[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 143[0;31m                 [0mself[0m[0;34m.[0m[0m_dbapi_connection[0m [0;34m=[0m [0mengine[0m[0;34m.[0m[0mraw_connection[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    144[0m             [0;32mexcept[0m [0mdialect[0m[0;34m.[0m[0mloaded_dbapi[0m[0;34m.[0m[0mError[0m [0;32mas[0m [0merr[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    145[0m                 Connection._handle_dbapi_exception_noconnection(

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/base.py[0m in [0;36mraw_connection[0;34m(self)[0m
[1;32m   3299[0m [0;34m[0m[0m
[1;32m   3300[0m         """
[0;32m-> 3301[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mpool[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3302[0m [0;34m[0m[0m
[1;32m   3303[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    445[0m [0;34m[0m[0m
[1;32m    446[0m         """
[0;32m--> 447[0;31m         [0;32mreturn[0m [0m_ConnectionFairy[0m[0;34m.[0m[0m_checkout[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    448[0m [0;34m[0m[0m
[1;32m    449[0m     [0;32mdef[0m [0m_return_conn[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mrecord[0m[0;34m:[0m [0mConnectionPoolEntry[0m[0;34m)[0m [0;34m->[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m_checkout[0;34m(cls, pool, threadconns, fairy)[0m
[1;32m   1262[0m     ) -> _ConnectionFairy:
[1;32m   1263[0m         [0;32mif[0m [0;32mnot[0m [0mfairy[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1264[0;31m             [0mfairy[0m [0;34m=[0m [0m_ConnectionRecord[0m[0;34m.[0m[0mcheckout[0m[0;34m([0m[0mpool[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1265[0m [0;34m[0m[0m
[1;32m   1266[0m             [0;32mif[0m [0mthreadconns[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36mcheckout[0;34m(cls, pool)[0m
[1;32m    709[0m             [0mrec[0m [0;34m=[0m [0mcast[0m[0;34m([0m[0m_ConnectionRecord[0m[0;34m,[0m [0mpool[0m[0;34m.[0m[0m_do_get[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    710[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 711[0;31m             [0mrec[0m [0;34m=[0m [0mpool[0m[0;34m.[0m[0m_do_get[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    712[0m [0;34m[0m[0m
[1;32m    713[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/impl.py[0m in [0;36m_do_get[0;34m(self)[0m
[1;32m    175[0m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_create_connection[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    176[0m             [0;32mexcept[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 177[0;31m                 [0;32mwith[0m [0mutil[0m[0;34m.[0m[0msafe_reraise[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    178[0m                     [0mself[0m[0;34m.[0m[0m_dec_overflow[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    179[0m                 [0;32mraise[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/util/langhelpers.py[0m in [0;36m__exit__[0;34m(self, type_, value, traceback)[0m
[1;32m    222[0m             [0;32massert[0m [0mexc_value[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    223[0m             [0mself[0m[0;34m.[0m[0m_exc_info[0m [0;34m=[0m [0;32mNone[0m  [0;31m# remove potential circular references[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 224[0;31m             [0;32mraise[0m [0mexc_value[0m[0;34m.[0m[0mwith_traceback[0m[0;34m([0m[0mexc_tb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    225[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    226[0m             [0mself[0m[0;34m.[0m[0m_exc_info[0m [0;34m=[0m [0;32mNone[0m  [0;31m# remove potential circular references[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/impl.py[0m in [0;36m_do_get[0;34m(self)[0m
[1;32m    173[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m_inc_overflow[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    174[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 175[0;31m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_create_connection[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    176[0m             [0;32mexcept[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    177[0m                 [0;32mwith[0m [0mutil[0m[0;34m.[0m[0msafe_reraise[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m_create_connection[0;34m(self)[0m
[1;32m    386[0m         [0;34m"""Called by subclasses to create a new ConnectionRecord."""[0m[0;34m[0m[0;34m[0m[0m
[1;32m    387[0m [0;34m[0m[0m
[0;32m--> 388[0;31m         [0;32mreturn[0m [0m_ConnectionRecord[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    389[0m [0;34m[0m[0m
[1;32m    390[0m     def _invalidate(

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m__init__[0;34m(self, pool, connect)[0m
[1;32m    671[0m         [0mself[0m[0;34m.[0m[0m__pool[0m [0;34m=[0m [0mpool[0m[0;34m[0m[0;34m[0m[0m
[1;32m    672[0m         [0;32mif[0m [0mconnect[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 673[0;31m             [0mself[0m[0;34m.[0m[0m__connect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    674[0m         [0mself[0m[0;34m.[0m[0mfinalize_callback[0m [0;34m=[0m [0mdeque[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    675[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m__connect[0;34m(self)[0m
[1;32m    897[0m             [0mself[0m[0;34m.[0m[0mfresh[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    898[0m         [0;32mexcept[0m [0mBaseException[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 899[0;31m             [0;32mwith[0m [0mutil[0m[0;34m.[0m[0msafe_reraise[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    900[0m                 [0mpool[0m[0;34m.[0m[0mlogger[0m[0;34m.[0m[0mdebug[0m[0;34m([0m[0;34m"Error on connect(): %s"[0m[0;34m,[0m [0me[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    901[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/util/langhelpers.py[0m in [0;36m__exit__[0;34m(self, type_, value, traceback)[0m
[1;32m    222[0m             [0;32massert[0m [0mexc_value[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    223[0m             [0mself[0m[0;34m.[0m[0m_exc_info[0m [0;34m=[0m [0;32mNone[0m  [0;31m# remove potential circular references[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 224[0;31m             [0;32mraise[0m [0mexc_value[0m[0;34m.[0m[0mwith_traceback[0m[0;34m([0m[0mexc_tb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    225[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    226[0m             [0mself[0m[0;34m.[0m[0m_exc_info[0m [0;34m=[0m [0;32mNone[0m  [0;31m# remove potential circular references[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/pool/base.py[0m in [0;36m__connect[0;34m(self)[0m
[1;32m    893[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    894[0m             [0mself[0m[0;34m.[0m[0mstarttime[0m [0;34m=[0m [0mtime[0m[0;34m.[0m[0mtime[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 895[0;31m             [0mself[0m[0;34m.[0m[0mdbapi_connection[0m [0;34m=[0m [0mconnection[0m [0;34m=[0m [0mpool[0m[0;34m.[0m[0m_invoke_creator[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    896[0m             [0mpool[0m[0;34m.[0m[0mlogger[0m[0;34m.[0m[0mdebug[0m[0;34m([0m[0;34m"Created new connection %r"[0m[0;34m,[0m [0mconnection[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    897[0m             [0mself[0m[0;34m.[0m[0mfresh[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/create.py[0m in [0;36mconnect[0;34m(connection_record)[0m
[1;32m    659[0m                         [0;32mreturn[0m [0mconnection[0m[0;34m[0m[0;34m[0m[0m
[1;32m    660[0m [0;34m[0m[0m
[0;32m--> 661[0;31m             [0;32mreturn[0m [0mdialect[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m*[0m[0mcargs[0m[0;34m,[0m [0;34m**[0m[0mcparams[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    662[0m [0;34m[0m[0m
[1;32m    663[0m         [0mcreator[0m [0;34m=[0m [0mpop_kwarg[0m[0;34m([0m[0;34m"creator"[0m[0;34m,[0m [0mconnect[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/sqlalchemy/engine/default.py[0m in [0;36mconnect[0;34m(self, *cargs, **cparams)[0m
[1;32m    627[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0mcargs[0m[0;34m:[0m [0mAny[0m[0;34m,[0m [0;34m**[0m[0mcparams[0m[0;34m:[0m [0mAny[0m[0;34m)[0m [0;34m->[0m [0mDBAPIConnection[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    628[0m         [0;31m# inherits the docstring from interfaces.Dialect.connect[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 629[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mloaded_dbapi[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m*[0m[0mcargs[0m[0;34m,[0m [0;34m**[0m[0mcparams[0m[0;34m)[0m  [0;31m# type: ignore[no-any-return]  # NOQA: E501[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    630[0m [0;34m[0m[0m
[1;32m    631[0m     [0;32mdef[0m [0mcreate_connect_args[0m[0;34m([0m[0mself[0m[0;34m,[0m [0murl[0m[0;34m:[0m [0mURL[0m[0;34m)[0m [0;34m->[0m [0mConnectArgsType[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/pymysql/connections.py[0m in [0;36m__init__[0;34m(self, user, password, host, database, unix_socket, port, charset, collation, sql_mode, read_default_file, conv, use_unicode, client_flag, cursorclass, init_command, connect_timeout, read_default_group, autocommit, local_infile, max_allowed_packet, defer_connect, auth_plugin_map, read_timeout, write_timeout, bind_address, binary_prefix, program_name, server_public_key, ssl, ssl_ca, ssl_cert, ssl_disabled, ssl_key, ssl_key_password, ssl_verify_cert, ssl_verify_identity, compress, named_pipe, passwd, db)[0m
[1;32m    363[0m             [0mself[0m[0;34m.[0m[0m_sock[0m [0;34m=[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    364[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 365[0;31m             [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    366[0m [0;34m[0m[0m
[1;32m    367[0m     [0;32mdef[0m [0m__enter__[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.12/dist-packages/pymysql/connections.py[0m in [0;36mconnect[0;34m(self, sock)[0m
[1;32m    721[0m                 [0;32mif[0m [0mDEBUG[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    722[0m                     [0mprint[0m[0;34m([0m[0mexc[0m[0;34m.[0m[0mtraceback[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 723[0;31m                 [0;32mraise[0m [0mexc[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    724[0m [0;34m[0m[0m
[1;32m    725[0m             [0;31m# If e is neither DatabaseError or IOError, It's a bug.[0m[0;34m[0m[0;34m[0m[0m

[0;31mOperationalError[0m: (pymysql.err.OperationalError) (2003, "Can't connect to MySQL server on 'localhost' ([Errno 99] Cannot assign requested address)")
(Background on this error at: https://sqlalche.me/e/20/e3q8)

